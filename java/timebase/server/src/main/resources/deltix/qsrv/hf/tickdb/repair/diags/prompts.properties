DiagCatalogUnreadable.this                  Unreadable Catalog
DiagCatalogUnreadable.cause                 Error Details:
DiagCatalogUnreadable.help=\
The <code>dbcat.txt</code> file was present but unreadable.

DiagCannotLockFolder
DiagCannotLockFolder.this                   Cannot Lock Folder
DiagCannotLockFolder.cause                  Error Details:
DiagCannotLockFolder.help=\
This folder cannot be locked for read-write. It may be open in a running \
TimeBase server, in another instance of TimeBase Repair Shop, or in embedded mode \
by TimeBase Administrator, TimeBase shell, a third-party application, etc.

DiagDataFileBadLogicalLength.this           Bad Data Length
DiagDataFileBadLogicalLength.length         Length:
DiagDataFileBadLogicalLength.help=\
The <code>logical length</code> value in the data file's header is \
completely invalid. This data file cannot be automatically repaired.


DiagDataFileBadMagic.this                   Bad Data File Format
DiagDataFileBadMagic.help=\
The "magic" bytes at the beginning of the data file are incorrect. \
This data file cannot be automatically repaired.


DiagDataFileBodyError.logicalLength         Stored Logical Length:
DiagDataFileBodyError.address               Message Address:


DiagDataFileMissing.this                    Missing Data File
DiagDataFileMissing.help=\
The data file was not found in the stream folder.

DiagDataFileShorterThanLogicalLength.this   Data File Too Short
DiagDataFileShorterThanLogicalLength.logicalLength      Stored Logical Length:
DiagDataFileShorterThanLogicalLength.physicalLength     Physical Length:
DiagDataFileShorterThanLogicalLength.help=\
Heads-up: the data file is physically shorter than the <code>logical length</code> \
field implies. The <code>logical length</code> field in the data file's header \
stores the length of the file occupied by message data. A data file is typically \
longer than the <code>logical length</code>, but it should not be shorter.\
<p>This diagnostic is issued for heads-up purposes only. A second error will \
be issued when the verification process gets to the truncated message.</p>

DiagDataFileTooShort.this                   Data File Too Short
DiagDataFileTooShort.length                 Physical Length:
DiagDataFileTooShort.help=\
The data file is shorter than required header size. This data file cannot \
be automatically repaired.


DiagDataHeaderNeedsUpdate.this              Data Header Update
DiagDataHeaderNeedsUpdate.help=\
Due to discrepancies reported earlier, this data file's header needs to be updated.


DiagFirstTimeMismatch.this                  First Timestamp Mismatch
DiagFirstTimeMismatch.claimedFirstTime      Stored First Timestamp:
DiagFirstTimeMismatch.observedFirstTime     Timestamp of First Message:
DiagFirstTimeMismatch.help=\
TimeBase stores the timestamp of the first message in the header of the data \
file. In this case, the stored timestamp differs from the timestamp of the \
actual first message in the data file.

DiagLastTimeMismatch.this                   Last Timestamp Mismatch
DiagLastTimeMismatch.claimedFirstTime       Stored Last Timestamp:
DiagLastTimeMismatch.observedFirstTime      Timestamp of Last Message:
DiagLastTimeMismatch.help=\
TimeBase stores the timestamp of the last committed message in the header of the data \
file. In this case, the stored timestamp differs from the timestamp of the \
actual last message in the data file. This diagnostic can be the result of \
incomplete reading of the data file due to previous problems.


DiagFirstTimeUnset.this                  First Timestamp Unset
DiagFirstTimeUnset.observedFirstTime     Timestamp of First Message:
DiagFirstTimeUnset.help=\
TimeBase stores the timestamp of the first message in the header of the data \
file. In this case, the timestamp was not stored. This situation routinely \
occurs upon non-graceful shutdown of TimeBase, and is automatically repaired on \
TimeBase startup, or it can be fixed here.


DiagLastTimeUnset.this                   Last Timestamp Unset
DiagLastTimeUnset.observedFirstTime      Timestamp of Last Message:
DiagLastTimeUnset.help=\
TimeBase stores the timestamp of the last committed message in the header of the data \
file. In this case, the timestamp was not stored. This situation routinely \
occurs upon non-graceful shutdown of TimeBase, and is automatically repaired on \
TimeBase startup, or it can be fixed here.


DiagFolderUnreadable.this                   Unreadable/Missing Folder
DiagFolderUnreadable.cause                  Error Details:
DiagFolderUnreadable.help=\
A folder specified as top-level TimeBase folder, either in a <code>dbcat.txt</code> \
file or as the TimeBase root folder, is missing or cannot be read.


DiagIndexEntryOutOfOrder.this               Index Entry Out of Order
DiagIndexEntryOutOfOrder.numEntries         Number of Index Entries
DiagIndexEntryOutOfOrder.previousTimestamp  Previous Indexed Timestamp:
DiagIndexEntryOutOfOrder.previousValue      Previous Indexed Address:
DiagIndexEntryOutOfOrder.entryTimestamp     This Entry's Timestamp:
DiagIndexEntryOutOfOrder.entryValue         This Entry's Address:
DiagIndexEntryOutOfOrder.help=\
An index entry violates either the timestamp, or the address ordering. \
Index entries must be strictly ordered by timestamp, and, therefore, \
also the indexed address. This entry violates the ordering. This error \
can be fixed by updating the index.


DiagIndexEntryTruncated.this                Index Entry Truncated
DiagIndexEntryTruncated.address             Address of Entry:
DiagIndexEntryTruncated.physicalLength      Index File Length:
DiagIndexEntryTruncated.help=\
An index entry could not be completely read from the index file. \
This can be fixed by updating the index.


DiagIndexFileBadMagic.this                  Bad Index File Format
DiagIndexFileBadMagic.help=\
The "magic" bytes at the beginning of the index file are incorrect. \
This can be fixed by rebuilding the index.


DiagIndexFileBodyError.entryNumber          Problem Entry Number:
DiagIndexFileBodyError.numEntries           Stored Number of Entries:


DiagIndexFileBadNumEntries.this             Bad Number of Index Entries
DiagIndexFileBadNumEntries.numEntries       Stored Number of Entries:
DiagIndexFileBadNumEntries.help=\
The <code>number of entries</code> header field is negative. \
This can be fixed by rebuilding the index.


DiagIndexFileMissing.this                   Missing Index File
DiagIndexFileMissing.help=\
The index file is missing. This can be fixed by rebuilding the index. \
Also, TimeBase automatically rebuilds missing index files on startup.

DiagIndexFileShorterThanLogicalLength.this  Index File Too Short
DiagIndexFileShorterThanLogicalLength.claimedNumEntries Stored Number of Entries:
DiagIndexFileShorterThanLogicalLength.logicalLength     Required File Length:
DiagIndexFileShorterThanLogicalLength.physicalLength    Actual File Length:
DiagIndexFileShorterThanLogicalLength.help=\
Heads-up: the index file is physically shorter than the <code># entries</code> \
field implies. The <code># entries</code> field in the index file's header \
implies a minimum length occupied by index data. An index file is typically \
longer than the implied length, but it should not be shorter.\
<p>This diagnostic is issued for heads-up purposes only. A second error will \
be issued when the verification process gets to the truncated index entry.</p>


DiagIndexFileTooShort.this                  Index File Too Short
DiagIndexFileTooShort.length                Physical Length:
DiagIndexFileTooShort.help=\
The index file is shorter than required header size. \
This can be fixed by rebuilding the index.


DiagIndexLongerThanData.this                Too Many Index Entries
DiagIndexLongerThanData.originalNumEntries  Stored Number of Entries:
DiagIndexLongerThanData.newNumEntries       Verified Number of Entries:
DiagIndexLongerThanData.help=\
The index file has entries beyond the verified segment. \
This could be the expected result of either unexpected server shutdown, or \
of the incomplete reading of the data file due to previous problems. \
Index/Data length mismatch is a <i>normal occurrence</i> and can be fixed here or \
by TimeBase on startup.


DiagIndexShorterThanData.this               Unindexed Data
DiagIndexShorterThanData.lastValidEntry     Last Valid Index Entry:
DiagIndexShorterThanData.lastIndexedAddress Last Indexed Address:
DiagIndexShorterThanData.logicalLength      Logical Data Length:
DiagIndexShorterThanData.help=\
The index does not cover the end of the data. \
This could be the expected result of either unexpected server shutdown, or \
of the incomplete reading of the index file due to previous problems. \
Index/Data length mismatch is a <i>normal occurrence</i> and can be fixed here or \
by TimeBase on startup.


DiagIndexTimestampDoesNotMatchData.this     Bad Index Timestamp
DiagIndexTimestampDoesNotMatchData.dataAddress          Message Address:
DiagIndexTimestampDoesNotMatchData.indexedTimestamp     Indexed Timestamp:
DiagIndexTimestampDoesNotMatchData.messageTimestamp     Message Timestamp:
DiagIndexTimestampDoesNotMatchData.help=\
An index entry correctly points to the beginning of a message in the data file, \
but the timestamp stored in the index entry differs from the timestamp stored \
in the message. This problem can be fixed by updating the index.


DiagIndexUndershootsData.this                   Bad Indexed Address
DiagIndexUndershootsData.indexedTimestamp       Indexed Timestamp:
DiagIndexUndershootsData.indexedAddress         Indexed Address:
DiagIndexUndershootsData.nextMessageTimestamp   Next Message Timestamp:
DiagIndexUndershootsData.nextDataAddress        Next Message Address:
DiagIndexUndershootsData.help=\
An index entry points into the middle of a message. The timestamps of the \
index entry and the message are displayed for forensic purposes only. \
The problem is the indexed address. This problem can be fixed by updating the index.


DiagMessageBodyTruncated.this                   Message Body Truncated (Physically)
DiagMessageBodyTruncated.messageSize            Stored Message Size:
DiagMessageBodyTruncated.bytesRead              Number of Bytes Read:
DiagMessageBodyTruncated.help=\
End of file (physical) while reading a message. In other words, the physical \
file length is less than the address of this message's body plus its expected \
size. This situation routinely occurs upon non-graceful shutdown of TimeBase, \
and is automatically repaired on TimeBase startup, or it can be fixed here.


DiagMessageBodyTruncatedLogical.this            Message Body Truncated (Logically)
DiagMessageBodyTruncatedLogical.messageBodyStart Body Start Address:
DiagMessageBodyTruncatedLogical.messageSize     Stored Message Size:
DiagMessageBodyTruncatedLogical.help=\
End of valid file segment (limited by stored logical length) \
while reading a message. In other words, the logical file length is less \
than the address of this message's body plus its expected size. \
This situation routinely occurs upon non-graceful shutdown of TimeBase, \
and is automatically repaired on TimeBase startup, or it can be fixed here.

DiagMessageSizeFieldTruncated.this              Message Size Truncated
DiagMessageSizeFieldTruncated.help=\
End of file while reading the message size field. \
This situation routinely occurs upon non-graceful shutdown of TimeBase, \
and is automatically repaired on TimeBase startup, or it can be fixed here.

DiagMessageTimestampOutOfOrder.this             Message Out of Order
DiagMessageTimestampOutOfOrder.timestamp        Timestamp:
DiagMessageTimestampOutOfOrder.previousTimestamp Previous Timestamp:
DiagMessageTimestampOutOfOrder.help=\
Message in an M-File must be ordered by timestamp. This message's timestamp \
is earlier than that of the previous message.


DiagMessageTimestampUnreadable.this             Timestamp Format Error
DiagMessageTimestampUnreadable.cause            Error Details:
DiagMessageTimestampUnreadable.help=\
Error decoding message timestamp.


# DiagMFileStats


DiagStreamFileNeedsRecovery.this                Incomplete Stream Header
DiagStreamFileNeedsRecovery.backupFile          Backup File:
DiagStreamFileNeedsRecovery.help=\
TimeBase transactionally protects changes to the stream header file. This \
stream header file has incomplete changes, most likely due to unexpected \
server shutdown. This is a <i>normal occurrence</i> and can be fixed here or \
by TimeBase on startup. The stream header will be rolled back to last valid state.


DiagStreamFileUnreadable.this                   Missing/Unreadable Stream Header
DiagStreamFileUnreadable.cause                  Error Details:
DiagStreamFileUnreadable.help=\
The stream header file is either not found (and no backup exists), or cannot be \
read or parsed. The latter could be the result of manually editing the file, \
or opening the wrong version of TimeBase.

DiagUnrecognizedFile.this                       Unrecognized File
DiagUnrecognizedFile.help=\
This file is unrecognized (not part of normal TimeBase structure).

DiagInvalidMessage.packet                       Data:

DiagInvalidMessageHeader.errorPosition          Error Position:

DiagMessageHeaderDecodeFailure.this             Invalid Message Header
DiagMessageHeaderDecodeFailure.help=\
The message has incorrect internal structure. Its header is unreadable.

DiagMessageHeaderDecodeFailure.error            Error Details:

DiagInvalidTypeDescriptor.this                  Invalid Message Type Code
DiagInvalidTypeDescriptor.help=\
Message type code is invalid.
DiagInvalidTypeDescriptor.typeDescriptor        Type Code:
DiagInvalidTypeDescriptor.numDescriptors        Total Number of Types:

DiagNoTypeDescriptor.this                       No Message Type Code
DiagInvalidTypeDescriptor.help=\
Message type code is missing (this message has no content).

DiagMessageValidationError.this                 Invalid Message Content
DiagMessageValidationError.error                Description:
